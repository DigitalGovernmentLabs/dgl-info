name: server

on: push

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_public_key: ${{ secrets.PUBLIC_KEY }}
      TF_VAR_private_key: ${{ secrets.GH_PAGES_DEPLOY }}
    steps:
      - uses: actions/checkout@v2
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: terraform setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.24
      - id: init
        run: cd server/terraform && terraform init
      - id: plan
        run: cd server/terraform && terraform plan -no-color
        if: github.ref != 'refs/heads/master'
      - id: apply
        run: cd server/terraform && terraform apply -auto-approve -no-color
        if: github.ref == 'refs/heads/master'

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Add key to allow access to server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          echo "${{ secrets.GH_PAGES_DEPLOY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat <<EOT >> ~/.ssh/config
          Host dgl.jp
          HostName ${{ secrets.SSH_HOST }}
          User ec2-user
          IdentityFile ~/.ssh/id_rsa
          EOT
      - run: |
          ssh dgl.jp <<EOC
          cd dgl-info/server
          git pull origin master
          echo "${{ secrets.SERVER_ENV }}" > .env
          docker-compose build
          docker-compose down
          docker-compose up -d
          EOC
